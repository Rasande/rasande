!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";n.r(t);n(2),n(3),n(4)},function(e,t){!function(e){var t=e(window),n=t.width(),a=e(".navbar-toggler"),r=e(".site-header"),o=e(".navbar-nav"),i=e(".dropdown-btn"),s=e(".dropdown-menu");function l(){e(o).toggleClass("is-open"),e(a).toggleClass("is-active"),e(r).toggleClass("expanded")}e(a).click((function(e){e.preventDefault(),l()})),e(i).click((function(t){t.preventDefault();var n=e(this);n.hasClass("toggled")?n.removeClass("toggled"):(n.parent().parent().find(".dropdown-btn").removeClass("toggled"),n.toggleClass("toggled")),n.next().hasClass("show")?(n.next().removeClass("show"),n.next().slideUp(350),n.parent().parent().find(".dropdown-menu").removeClass("show"),n.parent().parent().find(".dropdown-menu").slideUp(350)):(n.parent().parent().find(".dropdown-menu").removeClass("show"),n.parent().parent().find(".dropdown-menu").slideUp(350),n.next().toggleClass("show"),n.next().slideToggle(350))})),t.resize((function(){var r=t.width();n!==r&&(e(o).hasClass("is-open")&&l(),e(s).hasClass("show")&&e(s).removeClass("show"),e(i).hasClass("toggled")&&e(i).removeClass("toggled"),e(s).attr("style"," "),e(o).attr("style"," "),e(a).removeClass("is-active"),e(o).removeAttr("style"))}))}(jQuery)},function(e,t){jQuery((function(e){var t=e(".gallery").isotope({itemSelector:".gallery-item",layoutMode:"masonry",masonry:{gutter:".gallery-item-gutter"}}),n={numberGreaterThan50:function(){var t=e(this).find(".number").text();return parseInt(t,10)>50},ium:function(){return e(this).find(".name").text().match(/ium$/)}};e(".btn-filter-group").on("click","button",(function(){var a=e(this).attr("data-filter");a=n[a]||a,t.isotope({filter:a})})),e(".btn-group").each((function(t,n){var a=e(n);a.on("click","button",(function(){a.find(".selected").removeClass("selected"),e(this).addClass("selected")}))}))}))},function(e,t){document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementsByClassName("slide-in-ltr");if(e)for(var t=0;t<e.length;t++)new Waypoint({element:e[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateX:[-250,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});var n=document.getElementsByClassName("slide-in-rtl");if(n)for(t=0;t<n.length;t++)new Waypoint({element:n[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateX:[250,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});anime({targets:".site-header",translateY:[-250,0],opacity:[0,1],easing:"easeOutExpo"}),anime({targets:".four-zero-four:nth-of-type(2)",rotate:".1turn",translateY:"25",duration:2e3,easing:"spring(1, 80, 2, 0)",delay:1e3});var a=document.querySelector(".block-overlay"),r=document.querySelector(".title"),o=document.querySelector(".page-title");a&&r&&o&&function(e,t,n){var a=t.clientHeight,r=t.offsetWidth;e.style.height=a+"px",anime.timeline({easing:"easeInOutQuad",duration:500}).add({targets:e,width:r,complete:function(n){e.style.right="0",t.style.opacity="1"}}).add({targets:e,width:"0"})}(a,r);var i=document.querySelector(".lead-block-overlay"),s=document.querySelector(".lead"),l=document.querySelector(".page-lead");i&&s&&l&&function(e,t,n){var a=t.clientHeight,r=t.offsetWidth;e.style.height=a+"px",anime.timeline({easing:"easeInOutQuad",duration:500}).add({targets:e,width:r,complete:function(n){e.style.right="0",t.style.opacity="1"},delay:250}).add({targets:e,width:"0"})}(i,s),document.querySelectorAll(".nav-item").forEach((function(e){e.addEventListener("mouseenter",(function(t){anime({targets:e.querySelector(".nav-link"),translateY:-3,easing:"easeOutExpo",duration:400})})),e.addEventListener("mouseleave",(function(t){anime({targets:e.querySelector(".nav-link"),translateY:0,easing:"easeOutExpo",duration:500})}))})),document.querySelectorAll(".dropdown-item").forEach((function(e){e.addEventListener("mouseenter",(function(t){anime({targets:e.querySelector(".nav-link"),translateX:3,easing:"easeOutExpo",duration:400})})),e.addEventListener("mouseleave",(function(t){anime({targets:e.querySelector(".nav-link"),translateX:0,easing:"easeOutExpo",duration:500})}))}))})),document.querySelectorAll(".social-item").forEach((function(e){e.addEventListener("mouseenter",(function(t){anime({targets:e.querySelector("a"),translateY:-3,easing:"easeOutExpo",duration:400})})),e.addEventListener("mouseleave",(function(t){anime({targets:e.querySelector("a"),translateY:0,easing:"easeOutExpo",duration:500})}))})),document.querySelectorAll(".footer-nav .menu-item").forEach((function(e){e.addEventListener("mouseenter",(function(t){anime({targets:e.querySelector("a"),translateY:-3,easing:"easeOutExpo",duration:400})})),e.addEventListener("mouseleave",(function(t){anime({targets:e.querySelector("a"),translateY:0,easing:"easeOutExpo",duration:500})}))}));var n=document.querySelectorAll(".navbar-brand svg path"),a=getComputedStyle(document.documentElement).getPropertyValue("--primary"),r=getComputedStyle(document.documentElement).getPropertyValue("--secondary"),o=[a,r,a,r,a,a,r];n.forEach((function(e,t){e.addEventListener("mouseenter",(function(n){anime({targets:e,fill:[{value:o[t],duration:800,delay:0,easing:"easeOutExpo"},{value:"#212529",duration:1600,delay:0,easing:"easeInOutExpo"}]})}))}));var i=document.getElementsByClassName("footer-brand");if(i)for(var s=0;s<i.length;s++)new Waypoint({element:i[s],handler:function(){anime({targets:".footer-brand svg path",keyframes:[{strokeDashoffset:[anime.setDashoffset,0],duration:1e3,easing:"linear",delay:anime.stagger(400)},{fill:"#fff",duration:3e3,easing:"easeOutExpo"}],direction:"normal",opacity:1}),this.destroy()},offset:"bottom-in-view"});var l,u;document.addEventListener("input",(function(e){"textarea"===e.target.tagName.toLowerCase()&&function(e){e.style.height="inherit";var t=window.getComputedStyle(e),n=parseInt(t.getPropertyValue("border-top-width"),10)+parseInt(t.getPropertyValue("padding-top"),10)+e.scrollHeight+parseInt(t.getPropertyValue("padding-bottom"),10)+parseInt(t.getPropertyValue("border-bottom-width"),10);e.style.height=n-14+"px"}(e.target)}),!1),l=jQuery,u=l(".wpcf7-form p"),l(".wpcf7-form-control").focus((function(){l(this).parents(u).addClass("focused")})),l(".wpcf7-form-control").blur((function(){""==l(this).val()?(l(this).removeClass("filled"),l(this).parents(u).removeClass("focused")):l(this).addClass("filled")}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3NjcmlwdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy9uYXZpZ2F0aW9uLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9tb2R1bGVzL2lzb3RvcGUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21vZHVsZXMvYW5pbWF0aW9uLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiJCIsIiR3aW5kb3ciLCJ3aW5kb3ciLCJsYXN0V2luZG93V2lkdGgiLCJ3aWR0aCIsInRvZ2dsZSIsImhlYWRlciIsIm5hdmlnYXRpb24iLCJkcm9wZG93bkJ0biIsImRyb3Bkb3duIiwidG9nZ2xlTWVudSIsInRvZ2dsZUNsYXNzIiwiY2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCIkdGhpcyIsInRoaXMiLCJoYXNDbGFzcyIsInJlbW92ZUNsYXNzIiwicGFyZW50IiwiZmluZCIsIm5leHQiLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJyZXNpemUiLCJ3aW5kb3dXaWR0aCIsImF0dHIiLCJyZW1vdmVBdHRyIiwialF1ZXJ5IiwiJGdyaWQiLCJpc290b3BlIiwiaXRlbVNlbGVjdG9yIiwibGF5b3V0TW9kZSIsIm1hc29ucnkiLCJndXR0ZXIiLCJmaWx0ZXJGbnMiLCJudW1iZXJHcmVhdGVyVGhhbjUwIiwibnVtYmVyIiwidGV4dCIsInBhcnNlSW50IiwiaXVtIiwibWF0Y2giLCJvbiIsImZpbHRlclZhbHVlIiwiZmlsdGVyIiwiZWFjaCIsImJ1dHRvbkdyb3VwIiwiJGJ1dHRvbkdyb3VwIiwiYWRkQ2xhc3MiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzbGlkZUluUmlnaHQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibGVuZ3RoIiwiV2F5cG9pbnQiLCJlbGVtZW50IiwiaGFuZGxlciIsImFuaW1lIiwidGFyZ2V0cyIsIm9wYWNpdHkiLCJ0cmFuc2xhdGVYIiwiZGVsYXkiLCJzdGFnZ2VyIiwiZHVyYXRpb24iLCJlYXNpbmciLCJkZXN0cm95Iiwib2Zmc2V0Iiwic2xpZGVJbkxlZnQiLCJ0cmFuc2xhdGVZIiwicm90YXRlIiwiYmxvY2siLCJxdWVyeVNlbGVjdG9yIiwidGl0bGUiLCJ0aXRsZUNvbnRhaW5lciIsImJsb2NrSGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiYmxvY2tXaWR0aCIsIm9mZnNldFdpZHRoIiwic3R5bGUiLCJoZWlnaHQiLCJ0aW1lbGluZSIsImFkZCIsImNvbXBsZXRlIiwidGwiLCJyaWdodCIsInRpdGxlUmV2ZWFsIiwibGVhZEJsb2NrIiwibGVhZCIsImxlYWRDb250YWluZXIiLCJsZWFkQmxvY2tIZWlnaHQiLCJsZWFkQmxvY2tXaWR0aCIsImxlYWRSZXZlYWwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIm5hdkl0ZW0iLCJldmVudCIsImRkSXRlbSIsInNvY2lhbEl0ZW0iLCJmb290ZXJJdGVtIiwic3ZnUGF0aHMiLCJwcmltYXJ5Q29sb3IiLCJnZXRDb21wdXRlZFN0eWxlIiwiZG9jdW1lbnRFbGVtZW50IiwiZ2V0UHJvcGVydHlWYWx1ZSIsInNlY29uZGFyeUNvbG9yIiwiY29sb3JzIiwic3ZnUGF0aCIsImZpbGwiLCJkcmF3c3ZnIiwia2V5ZnJhbWVzIiwic3Ryb2tlRGFzaG9mZnNldCIsInNldERhc2hvZmZzZXQiLCJkaXJlY3Rpb24iLCJmb3JtR3JvdXAiLCJ0YXJnZXQiLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiLCJmaWVsZCIsImNvbXB1dGVkIiwic2Nyb2xsSGVpZ2h0IiwiYXV0b0V4cGFuZCIsImZvY3VzIiwicGFyZW50cyIsImJsdXIiLCJ2YWwiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVBQVBBLElBQVVGLEVBQVFyQixFQUFvQnFCLElBQy9CLEVBQVBFLEVBQVUsT0FBT0YsRUFDcEIsR0FBVyxFQUFQRSxHQUE4QixpQkFBVkYsR0FBc0JBLEdBQVNBLEVBQU1HLFdBQVksT0FBT0gsRUFDaEYsSUFBSUksRUFBS1gsT0FBT1ksT0FBTyxNQUd2QixHQUZBMUIsRUFBb0JrQixFQUFFTyxHQUN0QlgsT0FBT0MsZUFBZVUsRUFBSSxVQUFXLENBQUVULFlBQVksRUFBTUssTUFBT0EsSUFDdEQsRUFBUEUsR0FBNEIsaUJBQVRGLEVBQW1CLElBQUksSUFBSU0sS0FBT04sRUFBT3JCLEVBQW9CVSxFQUFFZSxFQUFJRSxFQUFLLFNBQVNBLEdBQU8sT0FBT04sRUFBTU0sSUFBUUMsS0FBSyxLQUFNRCxJQUM5SSxPQUFPRixHQUlSekIsRUFBb0I2QixFQUFJLFNBQVMxQixHQUNoQyxJQUFJUyxFQUFTVCxHQUFVQSxFQUFPcUIsV0FDN0IsV0FBd0IsT0FBT3JCLEVBQWdCLFNBQy9DLFdBQThCLE9BQU9BLEdBRXRDLE9BREFILEVBQW9CVSxFQUFFRSxFQUFRLElBQUtBLEdBQzVCQSxHQUlSWixFQUFvQmEsRUFBSSxTQUFTaUIsRUFBUUMsR0FBWSxPQUFPakIsT0FBT2tCLFVBQVVDLGVBQWUxQixLQUFLdUIsRUFBUUMsSUFHekcvQixFQUFvQmtDLEVBQUksR0FJakJsQyxFQUFvQkEsRUFBb0JtQyxFQUFJLEcsK0RDbEZyRCx1QixlQ0FBLFNBQVVDLEdBRU4sSUFBSUMsRUFBVUQsRUFBRUUsUUFDWkMsRUFBa0JGLEVBQVFHLFFBQzFCQyxFQUFTTCxFQUFHLG1CQUNaTSxFQUFTTixFQUFHLGdCQUNaTyxFQUFhUCxFQUFHLGVBQ2hCUSxFQUFjUixFQUFHLGlCQUNqQlMsRUFBV1QsRUFBRyxrQkFHbEIsU0FBU1UsSUFFTFYsRUFBRU8sR0FBWUksWUFBYSxXQUUzQlgsRUFBRUssR0FBUU0sWUFBYSxhQUV2QlgsRUFBRU0sR0FBUUssWUFBYSxZQWdCM0JYLEVBQUVLLEdBQVFPLE9BQU0sU0FBU0MsR0FDckJBLEVBQUVDLGlCQUVGSixPQUtKVixFQUFFUSxHQUFhSSxPQUFNLFNBQVNDLEdBQzFCQSxFQUFFQyxpQkFFRixJQUFJQyxFQUFRZixFQUFFZ0IsTUFHaEJELEVBQU1FLFNBQVUsV0FDbkJGLEVBQU1HLFlBQWEsWUFFbkJILEVBQU1JLFNBQVNBLFNBQVNDLEtBQU0saUJBQWtCRixZQUFhLFdBQzdESCxFQUFNSixZQUFhLFlBSVZJLEVBQU1NLE9BQU9KLFNBQVUsU0FDdkJGLEVBQU1NLE9BQU9ILFlBQWEsUUFDMUJILEVBQU1NLE9BQU9DLFFBQVMsS0FDdEJQLEVBQU1JLFNBQVNBLFNBQVNDLEtBQU0sa0JBQW1CRixZQUFhLFFBQzlESCxFQUFNSSxTQUFTQSxTQUFTQyxLQUFNLGtCQUFtQkUsUUFBUyxPQUcxRFAsRUFBTUksU0FBU0EsU0FBU0MsS0FBTSxrQkFBbUJGLFlBQWEsUUFDdkVILEVBQU1JLFNBQVNBLFNBQVNDLEtBQU0sa0JBQW1CRSxRQUFTLEtBQzFEUCxFQUFNTSxPQUFPVixZQUFhLFFBQ2pCSSxFQUFNTSxPQUFPRSxZQUFhLFNBS2xDdEIsRUFBUXVCLFFBQU8sV0FFWCxJQUFJQyxFQUFjeEIsRUFBUUcsUUFFdEJELElBQW9Cc0IsSUFFWnpCLEVBQUVPLEdBQVlVLFNBQVUsWUFDeEJQLElBeERSVixFQUFFUyxHQUFVUSxTQUFVLFNBQ3RCakIsRUFBRVMsR0FBVVMsWUFBYSxRQUV6QmxCLEVBQUVRLEdBQWFTLFNBQVUsWUFDekJqQixFQUFFUSxHQUFhVSxZQUFhLFdBRWhDbEIsRUFBRVMsR0FBVWlCLEtBQU0sUUFBUyxLQUMzQjFCLEVBQUVPLEdBQVltQixLQUFNLFFBQVMsS0FDN0IxQixFQUFFSyxHQUFRYSxZQUFhLGFBb0RmbEIsRUFBRU8sR0FBWW9CLFdBQVksYUFqRjFDLENBcUZJQyxTLGNDckZKQSxRQUFPLFNBQVU1QixHQUVmLElBQUk2QixFQUFRN0IsRUFBRSxZQUFZOEIsUUFBUSxDQUNoQ0MsYUFBYyxnQkFDZEMsV0FBWSxVQUNaQyxRQUFVLENBQ1JDLE9BQVEsMEJBSVJDLEVBQVksQ0FFZEMsb0JBQXFCLFdBQ25CLElBQUlDLEVBQVNyQyxFQUFFZ0IsTUFBTUksS0FBSyxXQUFXa0IsT0FDckMsT0FBT0MsU0FBVUYsRUFBUSxJQUFPLElBR2xDRyxJQUFLLFdBRUgsT0FEV3hDLEVBQUVnQixNQUFNSSxLQUFLLFNBQVNrQixPQUNyQkcsTUFBTyxVQUl2QnpDLEVBQUUscUJBQXFCMEMsR0FBSSxRQUFTLFVBQVUsV0FDNUMsSUFBSUMsRUFBYzNDLEVBQUdnQixNQUFPVSxLQUFLLGVBRWpDaUIsRUFBY1IsRUFBV1EsSUFBaUJBLEVBQzFDZCxFQUFNQyxRQUFRLENBQUVjLE9BQVFELE9BRzFCM0MsRUFBRSxjQUFjNkMsTUFBTSxTQUFVN0UsRUFBRzhFLEdBQ2pDLElBQUlDLEVBQWUvQyxFQUFHOEMsR0FDdEJDLEVBQWFMLEdBQUksUUFBUyxVQUFVLFdBQ2xDSyxFQUFhM0IsS0FBSyxhQUFhRixZQUFZLFlBQzNDbEIsRUFBR2dCLE1BQU9nQyxTQUFTLHNCLGNDbEN6QkMsU0FBU0MsaUJBQWlCLG9CQUFvQixXQUk1QyxJQUFJQyxFQUFlRixTQUFTRyx1QkFBdUIsZ0JBRW5ELEdBQUlELEVBQ0YsSUFBSyxJQUFJbkYsRUFBSSxFQUFHQSxFQUFJbUYsRUFBYUUsT0FBUXJGLElBQ3ZDLElBQUlzRixTQUFTLENBQ1hDLFFBQVNKLEVBQWFuRixHQUN0QndGLFFBQVMsV0FDUEMsTUFBTSxDQUNKQyxRQUFTMUMsS0FBS3VDLFFBQ2RJLFFBQVMsQ0FBQyxFQUFHLEdBQ2JDLFdBQVksRUFBRSxJQUFLLEdBQ25CQyxNQUFPSixNQUFNSyxRQUFRLEtBQ3JCQyxTQUFVLElBQ1ZDLE9BQVEsZ0JBRVZoRCxLQUFLaUQsV0FFUEMsT0FBUSxRQU9kLElBQUlDLEVBQWNsQixTQUFTRyx1QkFBdUIsZ0JBRWxELEdBQUllLEVBQ0YsSUFBU25HLEVBQUksRUFBR0EsRUFBSW1HLEVBQVlkLE9BQVFyRixJQUN0QyxJQUFJc0YsU0FBUyxDQUNYQyxRQUFTWSxFQUFZbkcsR0FDckJ3RixRQUFTLFdBQ1BDLE1BQU0sQ0FDSkMsUUFBUzFDLEtBQUt1QyxRQUNkSSxRQUFTLENBQUMsRUFBRyxHQUNiQyxXQUFZLENBQUMsSUFBSyxHQUNsQkMsTUFBT0osTUFBTUssUUFBUSxLQUNyQkMsU0FBVSxJQUNWQyxPQUFRLGdCQUVWaEQsS0FBS2lELFdBRVBDLE9BQVEsUUFPZFQsTUFBTSxDQUNKQyxRQUFTLGVBQ1RVLFdBQVksRUFBRSxJQUFLLEdBQ25CVCxRQUFTLENBQUMsRUFBRyxHQUNiSyxPQUFRLGdCQUtWUCxNQUFNLENBQ0pDLFFBQVMsaUNBQ1RXLE9BQVEsU0FDUkQsV0FBWSxLQUNaTCxTQUFVLElBQ1ZDLE9BQVEsc0JBQ1JILE1BQU8sTUFLVCxJQUFJUyxFQUFRckIsU0FBU3NCLGNBQWMsa0JBQy9CQyxFQUFRdkIsU0FBU3NCLGNBQWMsVUFDL0JFLEVBQWlCeEIsU0FBU3NCLGNBQWMsZUE4QnhDRCxHQUFTRSxHQUFTQyxHQTVCSixTQUFVSCxFQUFPRSxFQUFPQyxHQUV4QyxJQUFJQyxFQUFjRixFQUFNRyxhQUNwQkMsRUFBYUosRUFBTUssWUFFdkJQLEVBQU1RLE1BQU1DLE9BQVNMLEVBQWMsS0FLeEJqQixNQUFNdUIsU0FBUyxDQUN0QmhCLE9BQVEsZ0JBQ1JELFNBQVUsTUFFVGtCLElBQUksQ0FDSHZCLFFBQVNZLEVBQ1RsRSxNQUFPd0UsRUFDUE0sU0FBVSxTQUFVQyxHQUNsQmIsRUFBTVEsTUFBTU0sTUFBUSxJQUNwQlosRUFBTU0sTUFBTW5CLFFBQVUsT0FHekJzQixJQUFJLENBQ0h2QixRQUFTWSxFQUNUbEUsTUFBTyxNQUtiaUYsQ0FBWWYsRUFBT0UsR0FLckIsSUFBSWMsRUFBWXJDLFNBQVNzQixjQUFjLHVCQUNuQ2dCLEVBQU90QyxTQUFTc0IsY0FBYyxTQUM5QmlCLEVBQWdCdkMsU0FBU3NCLGNBQWMsY0ErQnZDZSxHQUFhQyxHQUFRQyxHQTdCUixTQUFVRixFQUFXQyxFQUFNQyxHQUUxQyxJQUFJQyxFQUFrQkYsRUFBS1osYUFDdkJlLEVBQWlCSCxFQUFLVixZQUUxQlMsRUFBVVIsTUFBTUMsT0FBU1UsRUFBa0IsS0FLaENoQyxNQUFNdUIsU0FBUyxDQUN0QmhCLE9BQVEsZ0JBQ1JELFNBQVUsTUFFVGtCLElBQUksQ0FDSHZCLFFBQVM0QixFQUNUbEYsTUFBT3NGLEVBQ1BSLFNBQVUsU0FBVUMsR0FDbEJHLEVBQVVSLE1BQU1NLE1BQVEsSUFDeEJHLEVBQUtULE1BQU1uQixRQUFVLEtBRXZCRSxNQUFPLE1BRVJvQixJQUFJLENBQ0h2QixRQUFTNEIsRUFDVGxGLE1BQU8sTUFLYnVGLENBQVdMLEVBQVdDLEdBS1R0QyxTQUFTMkMsaUJBQWlCLGFBRWhDQyxTQUFRLFNBQUNDLEdBQ2hCQSxFQUFRNUMsaUJBQWlCLGNBQWMsU0FBQzZDLEdBQ3RDdEMsTUFBTSxDQUNKQyxRQUFTb0MsRUFBUXZCLGNBQWMsYUFDL0JILFlBQWEsRUFDYkosT0FBUSxjQUNSRCxTQUFVLFNBR2QrQixFQUFRNUMsaUJBQWlCLGNBQWMsU0FBQzZDLEdBQ3RDdEMsTUFBTSxDQUNKQyxRQUFTb0MsRUFBUXZCLGNBQWMsYUFDL0JILFdBQVksRUFDWkosT0FBUSxjQUNSRCxTQUFVLFlBT0ZkLFNBQVMyQyxpQkFBaUIsa0JBRWhDQyxTQUFRLFNBQUNHLEdBQ2ZBLEVBQU85QyxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDckN0QyxNQUFNLENBQ0pDLFFBQVNzQyxFQUFPekIsY0FBYyxhQUM5QlgsV0FBWSxFQUNaSSxPQUFRLGNBQ1JELFNBQVUsU0FHZGlDLEVBQU85QyxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDckN0QyxNQUFNLENBQ0pDLFFBQVNzQyxFQUFPekIsY0FBYyxhQUM5QlgsV0FBWSxFQUNaSSxPQUFRLGNBQ1JELFNBQVUsZUFRRWQsU0FBUzJDLGlCQUFpQixnQkFFaENDLFNBQVEsU0FBQ0ksR0FDbkJBLEVBQVcvQyxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDekN0QyxNQUFNLENBQ0pDLFFBQVN1QyxFQUFXMUIsY0FBYyxLQUNsQ0gsWUFBYSxFQUNiSixPQUFRLGNBQ1JELFNBQVUsU0FHZGtDLEVBQVcvQyxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDekN0QyxNQUFNLENBQ0pDLFFBQVN1QyxFQUFXMUIsY0FBYyxLQUNsQ0gsV0FBWSxFQUNaSixPQUFRLGNBQ1JELFNBQVUsWUFPRWQsU0FBUzJDLGlCQUFpQiwwQkFFaENDLFNBQVEsU0FBQ0ssR0FDbkJBLEVBQVdoRCxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDekN0QyxNQUFNLENBQ0pDLFFBQVN3QyxFQUFXM0IsY0FBYyxLQUNsQ0gsWUFBYSxFQUNiSixPQUFRLGNBQ1JELFNBQVUsU0FHZG1DLEVBQVdoRCxpQkFBaUIsY0FBYyxTQUFDNkMsR0FDekN0QyxNQUFNLENBQ0pDLFFBQVN3QyxFQUFXM0IsY0FBYyxLQUNsQ0gsV0FBWSxFQUNaSixPQUFRLGNBQ1JELFNBQVUsWUFTbEIsSUFBSW9DLEVBQVdsRCxTQUFTMkMsaUJBQWlCLDBCQUVyQ1EsRUFBZUMsaUJBQWlCcEQsU0FBU3FELGlCQUFpQkMsaUJBQWlCLGFBQzNFQyxFQUFpQkgsaUJBQWlCcEQsU0FBU3FELGlCQUFpQkMsaUJBQWlCLGVBRTdFRSxFQUFTLENBQUNMLEVBQWNJLEVBQWlCSixFQUFjSSxFQUFpQkosRUFBY0EsRUFBY0ksR0FFeEdMLEVBQVNOLFNBQVMsU0FBVWEsRUFBUzFJLEdBRW5DMEksRUFBUXhELGlCQUFpQixjQUFjLFNBQUM2QyxHQUN6Q3RDLE1BQU0sQ0FDREMsUUFBU2dELEVBQ1RDLEtBQU0sQ0FDSixDQUFFMUgsTUFBT3dILEVBQU96SSxHQUFJK0YsU0FBVSxJQUFLRixNQUFPLEVBQUdHLE9BQVEsZUFDckQsQ0FBRS9FLE1BQU8sVUFBVzhFLFNBQVUsS0FBTUYsTUFBTyxFQUFHRyxPQUFRLDBCQVM5RCxJQUFJNEMsRUFBVTNELFNBQVNHLHVCQUF1QixnQkFFOUMsR0FBSXdELEVBQ0YsSUFBSyxJQUFJNUksRUFBSSxFQUFHQSxFQUFJNEksRUFBUXZELE9BQVFyRixJQUNsQyxJQUFJc0YsU0FBUyxDQUNYQyxRQUFTcUQsRUFBUTVJLEdBQ2pCd0YsUUFBUyxXQUNQQyxNQUFNLENBQ0pDLFFBQVMseUJBQ1RtRCxVQUFXLENBQ1QsQ0FBRUMsaUJBQWtCLENBQUNyRCxNQUFNc0QsY0FBZSxHQUFJaEQsU0FBVSxJQUFNQyxPQUFRLFNBQVVILE1BQU9KLE1BQU1LLFFBQVEsTUFDckcsQ0FBRTZDLEtBQU0sT0FBUTVDLFNBQVUsSUFBTUMsT0FBUSxnQkFHMUNnRCxVQUFXLFNBQ1hyRCxRQUFTLElBRVgzQyxLQUFLaUQsV0FFUEMsT0FBUSxtQkFPZCxJQXdCV2xFLEVBSUxpSCxFQWJOaEUsU0FBU0MsaUJBQWlCLFNBQVMsU0FBVTZDLEdBQ0EsYUFBdkNBLEVBQU1tQixPQUFPQyxRQUFRQyxlQWhCVixTQUFVQyxHQUV6QkEsRUFBTXZDLE1BQU1DLE9BQVMsVUFFckIsSUFBSXVDLEVBQVdwSCxPQUFPbUcsaUJBQWlCZ0IsR0FDbkN0QyxFQUFTeEMsU0FBUytFLEVBQVNmLGlCQUFpQixvQkFBcUIsSUFDbkVoRSxTQUFTK0UsRUFBU2YsaUJBQWlCLGVBQWdCLElBQ25EYyxFQUFNRSxhQUNOaEYsU0FBUytFLEVBQVNmLGlCQUFpQixrQkFBbUIsSUFDdERoRSxTQUFTK0UsRUFBU2YsaUJBQWlCLHVCQUF3QixJQUU3RGMsRUFBTXZDLE1BQU1DLE9BQVNBLEVBQVMsR0FBSyxLQU1uQ3lDLENBQVd6QixFQUFNbUIsV0FDaEIsR0FNUWxILEVBb0JSNEIsT0FoQkdxRixFQUFZakgsRUFBRSxpQkFFbEJBLEVBQUUsdUJBQXVCeUgsT0FBTSxXQUM3QnpILEVBQUVnQixNQUFNMEcsUUFBUVQsR0FBV2pFLFNBQVMsY0FHdENoRCxFQUFFLHVCQUF1QjJILE1BQUssV0FFVixJQUREM0gsRUFBRWdCLE1BQU00RyxPQUV2QjVILEVBQUVnQixNQUFNRSxZQUFZLFVBQ3BCbEIsRUFBRWdCLE1BQU0wRyxRQUFRVCxHQUFXL0YsWUFBWSxZQUV2Q2xCLEVBQUVnQixNQUFNZ0MsU0FBUyIsImZpbGUiOiJzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJpbXBvcnQgJy4vbW9kdWxlcy9uYXZpZ2F0aW9uJ1xyXG5pbXBvcnQgJy4vbW9kdWxlcy9pc290b3BlJ1xyXG5pbXBvcnQgJy4vbW9kdWxlcy9hbmltYXRpb24nXHJcbiIsIihmdW5jdGlvbigkKSB7XHJcblxyXG4gICAgbGV0ICR3aW5kb3cgPSAkKHdpbmRvdyk7XHJcbiAgICBsZXQgbGFzdFdpbmRvd1dpZHRoID0gJHdpbmRvdy53aWR0aCgpO1xyXG4gICAgbGV0IHRvZ2dsZSA9ICQoICcubmF2YmFyLXRvZ2dsZXInICk7XHJcbiAgICBsZXQgaGVhZGVyID0gJCggJy5zaXRlLWhlYWRlcicgKTtcclxuICAgIGxldCBuYXZpZ2F0aW9uID0gJCggJy5uYXZiYXItbmF2JyApO1xyXG4gICAgbGV0IGRyb3Bkb3duQnRuID0gJCggJy5kcm9wZG93bi1idG4nICk7XHJcbiAgICBsZXQgZHJvcGRvd24gPSAkKCAnLmRyb3Bkb3duLW1lbnUnICk7XHJcblxyXG4gICAgLy8gRnVuY3Rpb25zXHJcbiAgICBmdW5jdGlvbiB0b2dnbGVNZW51KCkge1xyXG4gICAgICAgIC8vIFRvZ2dsZSAub3BlbiB0byAubmF2YmFyLW5hdlxyXG4gICAgICAgICQobmF2aWdhdGlvbikudG9nZ2xlQ2xhc3MoICdpcy1vcGVuJyApO1xyXG4gICAgICAgIC8vIFRvZ2dsZSAuaXMtYWN0aXZlIHRvIHRoZSBoYW1idXJnZXIgaWNvblxyXG4gICAgICAgICQodG9nZ2xlKS50b2dnbGVDbGFzcyggJ2lzLWFjdGl2ZScgKTtcclxuICAgICAgICAvLyBUb2dnbGUgLmlzLWFjdGl2ZSBvbiBzaXRlLWhlYWRlclxyXG4gICAgICAgICQoaGVhZGVyKS50b2dnbGVDbGFzcyggJ2V4cGFuZGVkJyApO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNsb3NlQWxsRHJvcGRvd25zKCkge1xyXG4gICAgICAgIGlmICgkKGRyb3Bkb3duKS5oYXNDbGFzcyggJ3Nob3cnICkpIHtcclxuICAgICAgICAgICAgJChkcm9wZG93bikucmVtb3ZlQ2xhc3MoICdzaG93JyApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoJChkcm9wZG93bkJ0bikuaGFzQ2xhc3MoICd0b2dnbGVkJyApKSB7XHJcbiAgICAgICAgICAgICQoZHJvcGRvd25CdG4pLnJlbW92ZUNsYXNzKCAndG9nZ2xlZCcgKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJChkcm9wZG93bikuYXR0ciggXCJzdHlsZVwiLCBcIiBcIiApO1xyXG4gICAgICAgICQobmF2aWdhdGlvbikuYXR0ciggXCJzdHlsZVwiLCBcIiBcIiApO1xyXG4gICAgICAgICQodG9nZ2xlKS5yZW1vdmVDbGFzcyggJ2lzLWFjdGl2ZScgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBPcGVuIG1vYmlsZSBtZW51XHJcbiAgICAkKHRvZ2dsZSkuY2xpY2soZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTsgXHJcblxyXG4gICAgICAgIHRvZ2dsZU1lbnUoKTtcclxuICBcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIE9wZW4gZHJvcGRvd24gbWVudXNcclxuICAgICQoZHJvcGRvd25CdG4pLmNsaWNrKGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxyXG5cclxuICAgICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpO1xyXG5cclxuICAgICAgICAvLyBBZGQgLyByZW1vdmUgLnRvZ2dsZWQgZnJvbSBkcm9wZG93biBidXR0b25cclxuXHRcdGlmICgkdGhpcy5oYXNDbGFzcyggJ3RvZ2dsZWQnICkpIHtcclxuXHRcdFx0JHRoaXMucmVtb3ZlQ2xhc3MoICd0b2dnbGVkJyApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0JHRoaXMucGFyZW50KCkucGFyZW50KCkuZmluZCggJy5kcm9wZG93bi1idG4nICkucmVtb3ZlQ2xhc3MoICd0b2dnbGVkJyApO1xyXG5cdFx0XHQkdGhpcy50b2dnbGVDbGFzcyggJ3RvZ2dsZWQnICk7XHJcblx0XHR9XHJcblxyXG4gICAgICAgIC8vIEFkZCAvIHJlbW92ZSAuc2hvdyBmcm9tIGRyb3Bkb3duLW1lbnVcclxuICAgICAgICBpZiAoJHRoaXMubmV4dCgpLmhhc0NsYXNzKCAnc2hvdycgKSkge1xyXG4gICAgICAgICAgICAkdGhpcy5uZXh0KCkucmVtb3ZlQ2xhc3MoICdzaG93JyApO1xyXG4gICAgICAgICAgICAkdGhpcy5uZXh0KCkuc2xpZGVVcCggMzUwICk7XHJcbiAgICAgICAgICAgICR0aGlzLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoICcuZHJvcGRvd24tbWVudScgKS5yZW1vdmVDbGFzcyggJ3Nob3cnICk7XHJcbiAgICAgICAgICAgICR0aGlzLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoICcuZHJvcGRvd24tbWVudScgKS5zbGlkZVVwKCAzNTAgKTtcclxuXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJHRoaXMucGFyZW50KCkucGFyZW50KCkuZmluZCggJy5kcm9wZG93bi1tZW51JyApLnJlbW92ZUNsYXNzKCAnc2hvdycgKTtcclxuXHRcdFx0JHRoaXMucGFyZW50KCkucGFyZW50KCkuZmluZCggJy5kcm9wZG93bi1tZW51JyApLnNsaWRlVXAoIDM1MCApO1xyXG5cdFx0XHQkdGhpcy5uZXh0KCkudG9nZ2xlQ2xhc3MoICdzaG93JyApO1xyXG4gICAgICAgICAgICAkdGhpcy5uZXh0KCkuc2xpZGVUb2dnbGUoIDM1MCApO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIENsb3NlIGFuZCByZXNldCBvbiB3aW5kb3cgd2lkdGggY2hhbmdlXHJcbiAgICAkd2luZG93LnJlc2l6ZShmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIHZhciB3aW5kb3dXaWR0aCA9ICR3aW5kb3cud2lkdGgoKTtcclxuXHJcbiAgICAgICAgaWYgKGxhc3RXaW5kb3dXaWR0aCAhPT0gd2luZG93V2lkdGgpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoJChuYXZpZ2F0aW9uKS5oYXNDbGFzcyggJ2lzLW9wZW4nICkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0b2dnbGVNZW51KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGNsb3NlQWxsRHJvcGRvd25zKCk7XHJcbiAgICAgICAgICAgICAgICAkKG5hdmlnYXRpb24pLnJlbW92ZUF0dHIoICdzdHlsZScgKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgICAgXHJcbn0pKCBqUXVlcnkgKTtcclxuIiwialF1ZXJ5KGZ1bmN0aW9uICgkKSB7XHJcblxyXG4gIHZhciAkZ3JpZCA9ICQoJy5nYWxsZXJ5JykuaXNvdG9wZSh7XHJcbiAgICBpdGVtU2VsZWN0b3I6ICcuZ2FsbGVyeS1pdGVtJyxcclxuICAgIGxheW91dE1vZGU6ICdtYXNvbnJ5JyxcclxuICAgIG1hc29ucnkgOiB7XHJcbiAgICAgIGd1dHRlcjogJy5nYWxsZXJ5LWl0ZW0tZ3V0dGVyJ1xyXG4gICAgfVxyXG4gIH0pO1xyXG4gIC8vIGZpbHRlciBmdW5jdGlvbnNcclxuICB2YXIgZmlsdGVyRm5zID0ge1xyXG4gICAgLy8gc2hvdyBpZiBudW1iZXIgaXMgZ3JlYXRlciB0aGFuIDUwXHJcbiAgICBudW1iZXJHcmVhdGVyVGhhbjUwOiBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIG51bWJlciA9ICQodGhpcykuZmluZCgnLm51bWJlcicpLnRleHQoKTtcclxuICAgICAgcmV0dXJuIHBhcnNlSW50KCBudW1iZXIsIDEwICkgPiA1MDtcclxuICAgIH0sXHJcbiAgICAvLyBzaG93IGlmIG5hbWUgZW5kcyB3aXRoIC1pdW1cclxuICAgIGl1bTogZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBuYW1lID0gJCh0aGlzKS5maW5kKCcubmFtZScpLnRleHQoKTtcclxuICAgICAgcmV0dXJuIG5hbWUubWF0Y2goIC9pdW0kLyApO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgLy8gYmluZCBmaWx0ZXIgYnV0dG9uIGNsaWNrXHJcbiAgJCgnLmJ0bi1maWx0ZXItZ3JvdXAnKS5vbiggJ2NsaWNrJywgJ2J1dHRvbicsIGZ1bmN0aW9uKCkge1xyXG4gICAgdmFyIGZpbHRlclZhbHVlID0gJCggdGhpcyApLmF0dHIoJ2RhdGEtZmlsdGVyJyk7XHJcbiAgICAvLyB1c2UgZmlsdGVyRm4gaWYgbWF0Y2hlcyB2YWx1ZVxyXG4gICAgZmlsdGVyVmFsdWUgPSBmaWx0ZXJGbnNbIGZpbHRlclZhbHVlIF0gfHwgZmlsdGVyVmFsdWU7XHJcbiAgICAkZ3JpZC5pc290b3BlKHsgZmlsdGVyOiBmaWx0ZXJWYWx1ZSB9KTtcclxuICB9KTtcclxuICAvLyBjaGFuZ2Ugc2VsZWN0ZWQgY2xhc3Mgb24gYnV0dG9uc1xyXG4gICQoJy5idG4tZ3JvdXAnKS5lYWNoKCBmdW5jdGlvbiggaSwgYnV0dG9uR3JvdXAgKSB7XHJcbiAgICB2YXIgJGJ1dHRvbkdyb3VwID0gJCggYnV0dG9uR3JvdXAgKTtcclxuICAgICRidXR0b25Hcm91cC5vbiggJ2NsaWNrJywgJ2J1dHRvbicsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAkYnV0dG9uR3JvdXAuZmluZCgnLnNlbGVjdGVkJykucmVtb3ZlQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcbiAgICAgICQoIHRoaXMgKS5hZGRDbGFzcygnc2VsZWN0ZWQnKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIFxyXG4gIFxyXG5cclxufSk7XHJcblxyXG5cclxuIiwiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcclxuXHJcbiAgLy8gU2xpZGUgaW4gY29udGVudCBsZWZ0IHRvIHJpZ2h0XHJcbiAgLy8gRXhlY3V0ZTogb24gc2Nyb2xsXHJcbiAgbGV0IHNsaWRlSW5SaWdodCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3NsaWRlLWluLWx0cicpO1xyXG5cclxuICBpZiAoc2xpZGVJblJpZ2h0KSB7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlSW5SaWdodC5sZW5ndGg7IGkrKykge1xyXG4gICAgICBuZXcgV2F5cG9pbnQoe1xyXG4gICAgICAgIGVsZW1lbnQ6IHNsaWRlSW5SaWdodFtpXSxcclxuICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBhbmltZSh7XHJcbiAgICAgICAgICAgIHRhcmdldHM6IHRoaXMuZWxlbWVudCxcclxuICAgICAgICAgICAgb3BhY2l0eTogWzAsIDFdLFxyXG4gICAgICAgICAgICB0cmFuc2xhdGVYOiBbLTI1MCwgMF0sXHJcbiAgICAgICAgICAgIGRlbGF5OiBhbmltZS5zdGFnZ2VyKDEwMCksXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLFxyXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbydcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvZmZzZXQ6ICc4MCUnXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBTbGlkZSBpbiBjb250ZW50IHJpZ2h0IHRvIGxlZnRcclxuICAvLyBFeGVjdXRlOiBvbiBzY3JvbGxcclxuICBsZXQgc2xpZGVJbkxlZnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzbGlkZS1pbi1ydGwnKTtcclxuXHJcbiAgaWYgKHNsaWRlSW5MZWZ0KSB7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNsaWRlSW5MZWZ0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIG5ldyBXYXlwb2ludCh7XHJcbiAgICAgICAgZWxlbWVudDogc2xpZGVJbkxlZnRbaV0sXHJcbiAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgYW5pbWUoe1xyXG4gICAgICAgICAgICB0YXJnZXRzOiB0aGlzLmVsZW1lbnQsXHJcbiAgICAgICAgICAgIG9wYWNpdHk6IFswLCAxXSxcclxuICAgICAgICAgICAgdHJhbnNsYXRlWDogWzI1MCwgMF0sXHJcbiAgICAgICAgICAgIGRlbGF5OiBhbmltZS5zdGFnZ2VyKDEwMCksXHJcbiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwLFxyXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbydcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBvZmZzZXQ6ICc4MCUnXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBTbGlkZSBkb3duIHNpdGUgaGVhZGVyXHJcbiAgLy8gRXhlY3V0ZTogb24gbG9hZFxyXG4gIGFuaW1lKHtcclxuICAgIHRhcmdldHM6ICcuc2l0ZS1oZWFkZXInLFxyXG4gICAgdHJhbnNsYXRlWTogWy0yNTAsIDBdLFxyXG4gICAgb3BhY2l0eTogWzAsIDFdLFxyXG4gICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nXHJcbiAgfSlcclxuXHJcbiAgLy8gRHJvcCB0aGUgemVybyBpbiA0MDRcclxuICAvLyBFeGVjdXRlOiBvbiBsb2FkXHJcbiAgYW5pbWUoe1xyXG4gICAgdGFyZ2V0czogJy5mb3VyLXplcm8tZm91cjpudGgtb2YtdHlwZSgyKScsXHJcbiAgICByb3RhdGU6ICcuMXR1cm4nLFxyXG4gICAgdHJhbnNsYXRlWTogJzI1JyxcclxuICAgIGR1cmF0aW9uOiAyMDAwLFxyXG4gICAgZWFzaW5nOiAnc3ByaW5nKDEsIDgwLCAyLCAwKScsXHJcbiAgICBkZWxheTogMTAwMFxyXG4gIH0pXHJcblxyXG4gIC8vIEJsb2NrIHJldmVhbCBmb3IgLnBhZ2UtdGl0ZWxcclxuICAvLyBFeGVjdXRlOiBvbiBsb2FkXHJcbiAgbGV0IGJsb2NrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJsb2NrLW92ZXJsYXknKTtcclxuICBsZXQgdGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGl0bGUnKTtcclxuICBsZXQgdGl0bGVDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZS10aXRsZScpO1xyXG5cclxuICB2YXIgdGl0bGVSZXZlYWwgPSBmdW5jdGlvbiAoYmxvY2ssIHRpdGxlLCB0aXRsZUNvbnRhaW5lcikge1xyXG5cclxuICAgIHZhciBibG9ja0hlaWdodCA9IHRpdGxlLmNsaWVudEhlaWdodDtcclxuICAgIHZhciBibG9ja1dpZHRoID0gdGl0bGUub2Zmc2V0V2lkdGg7XHJcblxyXG4gICAgYmxvY2suc3R5bGUuaGVpZ2h0ID0gYmxvY2tIZWlnaHQgKyAncHgnO1xyXG5cclxuICAgIHRpdGxlQW5pbWF0aW9uKCk7XHJcblxyXG4gICAgZnVuY3Rpb24gdGl0bGVBbmltYXRpb24oKSB7XHJcbiAgICAgIHZhciB0bCA9IGFuaW1lLnRpbWVsaW5lKHtcclxuICAgICAgICBlYXNpbmc6ICdlYXNlSW5PdXRRdWFkJyxcclxuICAgICAgICBkdXJhdGlvbjogNTAwLFxyXG4gICAgICB9KTtcclxuICAgICAgdGwuYWRkKHtcclxuICAgICAgICAgIHRhcmdldHM6IGJsb2NrLFxyXG4gICAgICAgICAgd2lkdGg6IGJsb2NrV2lkdGgsXHJcbiAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKHRsKSB7XHJcbiAgICAgICAgICAgIGJsb2NrLnN0eWxlLnJpZ2h0ID0gJzAnO1xyXG4gICAgICAgICAgICB0aXRsZS5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmFkZCh7XHJcbiAgICAgICAgICB0YXJnZXRzOiBibG9jayxcclxuICAgICAgICAgIHdpZHRoOiAnMCdcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gIH1cclxuICBpZiAoYmxvY2sgJiYgdGl0bGUgJiYgdGl0bGVDb250YWluZXIpIHtcclxuICAgIHRpdGxlUmV2ZWFsKGJsb2NrLCB0aXRsZSwgdGl0bGVDb250YWluZXIpO1xyXG4gIH1cclxuXHJcbiAgLy8gQmxvY2sgcmV2ZWFsIGZvciAucGFnZS1sZWFkXHJcbiAgLy8gRXhlY3V0ZTogb24gbG9hZFxyXG4gIGxldCBsZWFkQmxvY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGVhZC1ibG9jay1vdmVybGF5Jyk7XHJcbiAgbGV0IGxlYWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGVhZCcpO1xyXG4gIGxldCBsZWFkQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UtbGVhZCcpO1xyXG5cclxuICB2YXIgbGVhZFJldmVhbCA9IGZ1bmN0aW9uIChsZWFkQmxvY2ssIGxlYWQsIGxlYWRDb250YWluZXIpIHtcclxuXHJcbiAgICB2YXIgbGVhZEJsb2NrSGVpZ2h0ID0gbGVhZC5jbGllbnRIZWlnaHQ7XHJcbiAgICB2YXIgbGVhZEJsb2NrV2lkdGggPSBsZWFkLm9mZnNldFdpZHRoO1xyXG5cclxuICAgIGxlYWRCbG9jay5zdHlsZS5oZWlnaHQgPSBsZWFkQmxvY2tIZWlnaHQgKyAncHgnO1xyXG5cclxuICAgIGxlYWRBbmltYXRpb24oKTtcclxuXHJcbiAgICBmdW5jdGlvbiBsZWFkQW5pbWF0aW9uKCkge1xyXG4gICAgICB2YXIgdGwgPSBhbmltZS50aW1lbGluZSh7XHJcbiAgICAgICAgZWFzaW5nOiAnZWFzZUluT3V0UXVhZCcsXHJcbiAgICAgICAgZHVyYXRpb246IDUwMCxcclxuICAgICAgfSk7XHJcbiAgICAgIHRsLmFkZCh7XHJcbiAgICAgICAgICB0YXJnZXRzOiBsZWFkQmxvY2ssXHJcbiAgICAgICAgICB3aWR0aDogbGVhZEJsb2NrV2lkdGgsXHJcbiAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKHRsKSB7XHJcbiAgICAgICAgICAgIGxlYWRCbG9jay5zdHlsZS5yaWdodCA9ICcwJztcclxuICAgICAgICAgICAgbGVhZC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGRlbGF5OiAyNTBcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5hZGQoe1xyXG4gICAgICAgICAgdGFyZ2V0czogbGVhZEJsb2NrLFxyXG4gICAgICAgICAgd2lkdGg6ICcwJ1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgfVxyXG4gIGlmIChsZWFkQmxvY2sgJiYgbGVhZCAmJiBsZWFkQ29udGFpbmVyKSB7XHJcbiAgICBsZWFkUmV2ZWFsKGxlYWRCbG9jaywgbGVhZCwgbGVhZENvbnRhaW5lcik7XHJcbiAgfVxyXG4gIFxyXG4gIC8vIE1vdmUgLm5hdi1pdGVtIHVwIGFuZCBkb3duXHJcbiAgLy8gRXhlY3V0ZTogb24gaG92ZXJcclxuICBsZXQgbmF2SXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2LWl0ZW0nKTtcclxuXHJcbiAgbmF2SXRlbXMuZm9yRWFjaCgobmF2SXRlbSkgPT4ge1xyXG4gICAgbmF2SXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBuYXZJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5uYXYtbGluaycpLFxyXG4gICAgICAgIHRyYW5zbGF0ZVk6IC0zLFxyXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcclxuICAgICAgICBkdXJhdGlvbjogNDAwXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgbmF2SXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBuYXZJdGVtLnF1ZXJ5U2VsZWN0b3IoJy5uYXYtbGluaycpLFxyXG4gICAgICAgIHRyYW5zbGF0ZVk6IDAsXHJcbiAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxyXG4gICAgICAgIGR1cmF0aW9uOiA1MDBcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSk7XHJcblxyXG4gIC8vIE1vdmUgLmRyb3Bkb3duLWl0ZW0gcmlnaHQgYW5kIGxlZnRcclxuICAvLyBFeGVjdXRlOiBvbiBob3ZlclxyXG4gIGxldCBkZEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRyb3Bkb3duLWl0ZW0nKTtcclxuXHJcbiAgZGRJdGVtcy5mb3JFYWNoKChkZEl0ZW0pID0+IHtcclxuICAgIGRkSXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBkZEl0ZW0ucXVlcnlTZWxlY3RvcignLm5hdi1saW5rJyksXHJcbiAgICAgICAgdHJhbnNsYXRlWDogMyxcclxuICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXHJcbiAgICAgICAgZHVyYXRpb246IDQwMFxyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICAgIGRkSXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBkZEl0ZW0ucXVlcnlTZWxlY3RvcignLm5hdi1saW5rJyksXHJcbiAgICAgICAgdHJhbnNsYXRlWDogMCxcclxuICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXHJcbiAgICAgICAgZHVyYXRpb246IDUwMFxyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICB9KTtcclxufSlcclxuXHJcbiAgLy8gTW92ZSAuc29jaWFsLWxpbmsgdXAgYW5kIGRvd25cclxuICAvLyBFeGVjdXRlOiBvbiBob3ZlclxyXG4gIGxldCBzb2NpYWxJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zb2NpYWwtaXRlbScpO1xyXG5cclxuICBzb2NpYWxJdGVtcy5mb3JFYWNoKChzb2NpYWxJdGVtKSA9PiB7XHJcbiAgICBzb2NpYWxJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoZXZlbnQpID0+IHtcclxuICAgICAgYW5pbWUoe1xyXG4gICAgICAgIHRhcmdldHM6IHNvY2lhbEl0ZW0ucXVlcnlTZWxlY3RvcignYScpLFxyXG4gICAgICAgIHRyYW5zbGF0ZVk6IC0zLFxyXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcclxuICAgICAgICBkdXJhdGlvbjogNDAwXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgc29jaWFsSXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBzb2NpYWxJdGVtLnF1ZXJ5U2VsZWN0b3IoJ2EnKSxcclxuICAgICAgICB0cmFuc2xhdGVZOiAwLFxyXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcclxuICAgICAgICBkdXJhdGlvbjogNTAwXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH0pO1xyXG5cclxuICAvLyBNb3ZlIC5zb2NpYWwtbGluayB1cCBhbmQgZG93blxyXG4gIC8vIEV4ZWN1dGU6IG9uIGhvdmVyXHJcbiAgbGV0IGZvb3Rlckl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmZvb3Rlci1uYXYgLm1lbnUtaXRlbScpO1xyXG5cclxuICBmb290ZXJJdGVtcy5mb3JFYWNoKChmb290ZXJJdGVtKSA9PiB7XHJcbiAgICBmb290ZXJJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoZXZlbnQpID0+IHtcclxuICAgICAgYW5pbWUoe1xyXG4gICAgICAgIHRhcmdldHM6IGZvb3Rlckl0ZW0ucXVlcnlTZWxlY3RvcignYScpLFxyXG4gICAgICAgIHRyYW5zbGF0ZVk6IC0zLFxyXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcclxuICAgICAgICBkdXJhdGlvbjogNDAwXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgZm9vdGVySXRlbS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGFuaW1lKHtcclxuICAgICAgICB0YXJnZXRzOiBmb290ZXJJdGVtLnF1ZXJ5U2VsZWN0b3IoJ2EnKSxcclxuICAgICAgICB0cmFuc2xhdGVZOiAwLFxyXG4gICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcclxuICAgICAgICBkdXJhdGlvbjogNTAwXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH0pO1xyXG5cclxuXHJcbi8vIENoYW5nZSBjb2xvciBvbiBsb2dvXHJcbi8vIEV4ZWN1dGU6IG9uIGhvdmVyXHJcblxyXG5sZXQgc3ZnUGF0aHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2YmFyLWJyYW5kIHN2ZyBwYXRoJyk7XHJcblxyXG5sZXQgcHJpbWFyeUNvbG9yID0gZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoJy0tcHJpbWFyeScpO1xyXG5sZXQgc2Vjb25kYXJ5Q29sb3IgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZSgnLS1zZWNvbmRhcnknKTtcclxuXHJcbmxldCBjb2xvcnMgPSBbcHJpbWFyeUNvbG9yLCBzZWNvbmRhcnlDb2xvciAsIHByaW1hcnlDb2xvciwgc2Vjb25kYXJ5Q29sb3IgLCBwcmltYXJ5Q29sb3IsIHByaW1hcnlDb2xvciwgc2Vjb25kYXJ5Q29sb3IgXTtcclxuXHJcbnN2Z1BhdGhzLmZvckVhY2goKGZ1bmN0aW9uIChzdmdQYXRoLCBpKSB7XHJcblxyXG4gIHN2Z1BhdGguYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIChldmVudCkgPT4ge1xyXG4gYW5pbWUoe1xyXG4gICAgICB0YXJnZXRzOiBzdmdQYXRoLFxyXG4gICAgICBmaWxsOiBbXHJcbiAgICAgICAgeyB2YWx1ZTogY29sb3JzW2ldLCBkdXJhdGlvbjogODAwLCBkZWxheTogMCwgZWFzaW5nOiAnZWFzZU91dEV4cG8nIH0sXHJcbiAgICAgICAgeyB2YWx1ZTogJyMyMTI1MjknLCBkdXJhdGlvbjogMTYwMCwgZGVsYXk6IDAsIGVhc2luZzogJ2Vhc2VJbk91dEV4cG8nIH1cclxuICAgICAgXSxcclxuICAgIH0pXHJcbiAgfSk7XHJcbn0pKTtcclxuXHJcblxyXG4vLyBEcmF3IGZvb3RlciBsb2dvXHJcbi8vIEV4ZWN1dGU6IG9uIHNjcm9sbFxyXG5sZXQgZHJhd3N2ZyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2Zvb3Rlci1icmFuZCcpO1xyXG5cclxuaWYgKGRyYXdzdmcpIHtcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGRyYXdzdmcubGVuZ3RoOyBpKyspIHtcclxuICAgIG5ldyBXYXlwb2ludCh7XHJcbiAgICAgIGVsZW1lbnQ6IGRyYXdzdmdbaV0sXHJcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhbmltZSh7XHJcbiAgICAgICAgICB0YXJnZXRzOiAnLmZvb3Rlci1icmFuZCBzdmcgcGF0aCcsXHJcbiAgICAgICAgICBrZXlmcmFtZXM6IFtcclxuICAgICAgICAgICAgeyBzdHJva2VEYXNob2Zmc2V0OiBbYW5pbWUuc2V0RGFzaG9mZnNldCwgMF0sIGR1cmF0aW9uOiAxMDAwLCBlYXNpbmc6ICdsaW5lYXInLCBkZWxheTogYW5pbWUuc3RhZ2dlcig0MDApfSxcclxuICAgICAgICAgICAgeyBmaWxsOiAnI2ZmZicsIGR1cmF0aW9uOiAzMDAwLCBlYXNpbmc6ICdlYXNlT3V0RXhwbyd9XHJcbiAgICAgICAgICBdLFxyXG4gICAgIFxyXG4gICAgICAgICAgZGlyZWN0aW9uOiAnbm9ybWFsJyxcclxuICAgICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5kZXN0cm95KCk7XHJcbiAgICAgIH0sXHJcbiAgICAgIG9mZnNldDogJ2JvdHRvbS1pbi12aWV3J1xyXG4gICAgfSlcclxuICB9XHJcbn1cclxuXHJcbi8vIEV4cGFuZCB0ZXh0YXJlYSB3aGVuIHR5cGluZ1xyXG4vLyBFeGVjdXJ0ZTogb24gbGluZWJyZWFrXHJcbnZhciBhdXRvRXhwYW5kID0gZnVuY3Rpb24gKGZpZWxkKSB7XHJcblxyXG4gIGZpZWxkLnN0eWxlLmhlaWdodCA9ICdpbmhlcml0JztcclxuXHJcbiAgdmFyIGNvbXB1dGVkID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZmllbGQpO1xyXG4gIHZhciBoZWlnaHQgPSBwYXJzZUludChjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItdG9wLXdpZHRoJyksIDEwKSArXHJcbiAgICBwYXJzZUludChjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXRvcCcpLCAxMCkgK1xyXG4gICAgZmllbGQuc2Nyb2xsSGVpZ2h0ICtcclxuICAgIHBhcnNlSW50KGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoJ3BhZGRpbmctYm90dG9tJyksIDEwKSArXHJcbiAgICBwYXJzZUludChjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCdib3JkZXItYm90dG9tLXdpZHRoJyksIDEwKTtcclxuXHJcbiAgZmllbGQuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0IC0gMTQgKyAncHgnO1xyXG5cclxufTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgaWYgKGV2ZW50LnRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICd0ZXh0YXJlYScpIHJldHVybjtcclxuICBhdXRvRXhwYW5kKGV2ZW50LnRhcmdldCk7XHJcbn0sIGZhbHNlKTtcclxuXHJcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuLy89PT09PT09PT0gSlFVRVJZID09PT09PT09PT09PVxyXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcblxyXG4oZnVuY3Rpb24gKCQpIHtcclxuXHJcbiAgLy8gQW5pbWF0ZSBmb3JtIGxhYmVsc1xyXG4gIC8vIEV4ZWN1cmUgb24gaW5wdXQgZm9jdXNcclxuICBsZXQgZm9ybUdyb3VwID0gJCgnLndwY2Y3LWZvcm0gcCcpO1xyXG5cclxuICAkKCcud3BjZjctZm9ybS1jb250cm9sJykuZm9jdXMoZnVuY3Rpb24gKCkge1xyXG4gICAgJCh0aGlzKS5wYXJlbnRzKGZvcm1Hcm91cCkuYWRkQ2xhc3MoJ2ZvY3VzZWQnKTtcclxuICB9KTtcclxuXHJcbiAgJCgnLndwY2Y3LWZvcm0tY29udHJvbCcpLmJsdXIoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGlucHV0VmFsdWUgPSAkKHRoaXMpLnZhbCgpO1xyXG4gICAgaWYgKGlucHV0VmFsdWUgPT0gXCJcIikge1xyXG4gICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKCdmaWxsZWQnKTtcclxuICAgICAgJCh0aGlzKS5wYXJlbnRzKGZvcm1Hcm91cCkucmVtb3ZlQ2xhc3MoJ2ZvY3VzZWQnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2ZpbGxlZCcpO1xyXG4gICAgfVxyXG4gIH0pXHJcblxyXG59KShqUXVlcnkpO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9