!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(a,o,function(t){return e[t]}.bind(null,o));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";n.r(t);n(2),n(3),n(4)},function(e,t){!function(e){var t=e(window),n=t.width(),a=e(".navbar-toggler"),o=e(".site-header"),r=e(".navbar-nav"),s=e(".dropdown-btn"),i=e(".dropdown-menu");function l(){e(r).toggleClass("is-open"),e(a).toggleClass("is-active"),e(o).toggleClass("expanded")}e(a).click((function(e){e.preventDefault(),l()})),e(s).click((function(t){t.preventDefault();var n=e(this);n.hasClass("toggled")?n.removeClass("toggled"):(n.parent().parent().find(".dropdown-btn").removeClass("toggled"),n.toggleClass("toggled")),n.next().hasClass("show")?(n.next().removeClass("show"),n.next().slideUp(350),n.parent().parent().find(".dropdown-menu").removeClass("show"),n.parent().parent().find(".dropdown-menu").slideUp(350)):(n.parent().parent().find(".dropdown-menu").removeClass("show"),n.parent().parent().find(".dropdown-menu").slideUp(350),n.next().toggleClass("show"),n.next().slideToggle(350))})),t.resize((function(){var o=t.width();n!==o&&(e(r).hasClass("is-open")&&l(),e(i).hasClass("show")&&e(i).removeClass("show"),e(s).hasClass("toggled")&&e(s).removeClass("toggled"),e(i).attr("style"," "),e(r).attr("style"," "),e(a).removeClass("is-active"),e(r).removeAttr("style"))}))}(jQuery)},function(e,t){jQuery(document).ready((function(e){var t=e(".gallery").isotope({itemSelector:".gallery-item",layoutMode:"masonry",masonry:{gutter:".gallery-item-gutter"}});e(".btn-filter-group").on("click","button",(function(){var n=e(this).attr("data-filter");t.isotope({filter:n})})),e(".btn-group").each((function(t,n){var a=e(n);a.on("click","button",(function(){a.find(".selected").removeClass("selected"),e(this).addClass("selected")}))}))}))},function(e,t){document.addEventListener("DOMContentLoaded",(function(){var e=document.getElementsByClassName("fade-in");if(e)for(var t=0;t<e.length;t++)new Waypoint({element:e[t],handler:function(){anime({targets:this.element,opacity:[0,1],delay:anime.stagger(100),duration:3e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});var n=document.getElementsByClassName("slide-in-btt");if(n)for(t=0;t<n.length;t++)new Waypoint({element:n[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateY:[200,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});var a=document.getElementsByClassName("slide-in-ttb");if(a)for(t=0;t<a.length;t++)new Waypoint({element:a[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateY:[-200,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});var o=document.getElementsByClassName("slide-in-ltr");if(o)for(t=0;t<o.length;t++)new Waypoint({element:o[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateX:[-200,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});var r=document.getElementsByClassName("slide-in-rtl");if(r)for(t=0;t<r.length;t++)new Waypoint({element:r[t],handler:function(){anime({targets:this.element,opacity:[0,1],translateX:[200,0],delay:anime.stagger(100),duration:2e3,easing:"easeOutExpo"}),this.destroy()},offset:"80%"});anime({targets:".site-header",translateY:[-200,0],opacity:[0,1],easing:"easeOutExpo"}),anime({targets:".four-zero-four:nth-of-type(2)",rotate:".1turn",translateY:"25",duration:2e3,easing:"spring(1, 80, 2, 0)",delay:1e3});var s=document.querySelector(".block-overlay"),i=document.querySelector(".title"),l=document.querySelector(".entry-title");s&&i&&l&&function(e,t,n){var a=t.clientHeight,o=t.offsetWidth;e.style.height=a+"px",anime.timeline({easing:"easeInOutQuad",duration:500}).add({targets:e,width:o,complete:function(n){e.style.right="0",t.style.opacity="1"}}).add({targets:e,width:"0"})}(s,i);var d=document.querySelector(".lead-block-overlay"),u=document.querySelector(".lead"),f=document.querySelector(".entry-lead");d&&u&&f&&function(e,t,n){var a=t.clientHeight,o=t.offsetWidth;e.style.height=a+"px",anime.timeline({easing:"easeInOutQuad",duration:500}).add({targets:e,width:o,complete:function(n){e.style.right="0",t.style.opacity="1"},delay:250}).add({targets:e,width:"0"})}(d,u),document.querySelectorAll(".nav-link, .btn-filter, .site-footer a ").forEach((function(e){e.addEventListener("mouseenter",(function(t){anime({targets:e,scale:1.1,easing:"easeOutExpo",duration:600})})),e.addEventListener("mouseleave",(function(t){anime({targets:e,scale:1,easing:"easeOutExpo",duration:800})}))}));var c=document.getElementsByClassName("footer-brand");if(c)for(t=0;t<c.length;t++)new Waypoint({element:c[t],handler:function(){anime({targets:".footer-brand svg path",keyframes:[{strokeDashoffset:[anime.setDashoffset,0],duration:1e3,easing:"linear",delay:anime.stagger(400,{from:"center"})},{fill:"#fff",duration:3e3,easing:"easeOutExpo"}],direction:"normal",opacity:1}),this.destroy()},offset:"bottom-in-view"});var g,m;document.addEventListener("input",(function(e){"textarea"===e.target.tagName.toLowerCase()&&function(e){e.style.height="inherit";var t=window.getComputedStyle(e),n=parseInt(t.getPropertyValue("border-top-width"),10)+parseInt(t.getPropertyValue("padding-top"),10)+e.scrollHeight+parseInt(t.getPropertyValue("padding-bottom"),10)+parseInt(t.getPropertyValue("border-bottom-width"),10);e.style.height=n-14+"px"}(e.target)}),!1),g=jQuery,m=g(".wpcf7-form p"),g(".wpcf7-form-control").focus((function(){g(this).parents(m).addClass("focused")})),g(".wpcf7-form-control").blur((function(){""==g(this).val()?(g(this).removeClass("filled"),g(this).parents(m).removeClass("focused")):g(this).addClass("filled")}))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,