!function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){e.exports=o(1)},function(e,t){!function(e){var t=e(window),o=t.width(),n=e(".nav-toggle"),r=e(".navigation"),s=e(".dropdown-menu"),i=e(".dropdown-btn");function l(){e(r).toggleClass("open"),e(n).toggleClass("is-active")}function a(){var t=e(".site-header").outerHeight();e(r).css("margin-top",t)}e(n).click((function(e){e.preventDefault(),l(),a()})),e(i).click((function(t){t.preventDefault();var o=e(this);o.hasClass("toggled")?o.removeClass("toggled"):(o.parent().parent().find(".dropdown-btn").removeClass("toggled"),o.toggleClass("toggled")),o.next().hasClass("show")?(o.next().removeClass("show"),o.next().slideUp(350),o.parent().parent().find(".dropdown-menu").removeClass("show"),o.parent().parent().find(".dropdown-menu").slideUp(350)):(o.parent().parent().find(".dropdown-menu").removeClass("show"),o.parent().parent().find(".dropdown-menu").slideUp(350),o.next().toggleClass("show"),o.next().slideToggle(350))})),t.resize((function(){var d=t.width();o!==d&&(e(r).hasClass("open")&&(l(),a()),e(s).hasClass("show")&&e(s).removeClass("show"),e(i).hasClass("toggled")&&e(i).removeClass("toggled"),e(s).attr("style"," "),e(r).attr("style"," "),e(n).removeClass("is-active"),e(r).removeAttr("style"))})),e(window).on("scroll",(function(){e(window).scrollTop()>=60?e(".site-header").addClass("active"):e(".site-header").removeClass("active")})),e(".dropdown").on("mouseenter focus mouseleave",(function(t){if(e("ul",this).length){var o=e("ul:first",this);o.offset().left+o.width()<=e("body").width()?e(this).removeClass("flipped"):e(this).addClass("flipped")}})),e(window).load((function(){var t=e(".portfolio");t.isotope({filter:"*",layoutMode:"Masonry",resizable:!1}),e(".portfolio-filter li").click((function(){var o=e(this).attr("data-filter");return t.isotope({filter:o}),e(".portfolio-filter li").removeClass("active"),e(this).addClass("active"),!1}))}))}(jQuery)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,